cmake_minimum_required(VERSION 3.18)
project(tdep_shim LANGUAGES Fortran)

# ---- User-provided paths ----
# Directory containing the .mod files for your OLLE modules (fc2/crystal/mem, etc.)
set(OLLE_INCLUDE_DIR "" CACHE PATH "Path to directory containing OLLE .mod files")

# Directory containing libolle.so (optional if OLLE_LIBRARY is given)
set(OLLE_LIB_DIR "" CACHE PATH "Path to directory containing libolle.so")

# Full path to libolle.so (optional; overrides OLLE_LIB_DIR)
set(OLLE_LIBRARY "" CACHE FILEPATH "Full path to libolle.so (overrides OLLE_LIB_DIR)")

# ---- Locate libolle.so ----
if(NOT OLLE_LIBRARY)
  find_library(OLLE_LIBRARY
    NAMES olle
    PATHS ${OLLE_LIB_DIR}
          $ENV{LD_LIBRARY_PATH}
          $ENV{LIBRARY_PATH}
    NO_DEFAULT_PATH)
endif()

if(NOT OLLE_LIBRARY)
  message(FATAL_ERROR "Could not find libolle.so. Set -DOLLE_LIBRARY=/path/to/libolle.so or -DOLLE_LIB_DIR=/path/to/libdir")
endif()

if(NOT OLLE_INCLUDE_DIR)
  message(FATAL_ERROR "Set -DOLLE_INCLUDE_DIR to the directory containing the OLLE .mod files.")
endif()

# ---- Build the shim ----
add_library(tdep_shim SHARED lo_ptr_api.f90)

# Where to put any .mod files generated by this target (not strictly needed, but tidy)
set_target_properties(tdep_shim PROPERTIES
  Fortran_MODULE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/mod
  OUTPUT_NAME tdep_shim)

target_include_directories(tdep_shim PRIVATE "${OLLE_INCLUDE_DIR}")
target_link_libraries(tdep_shim PRIVATE "${OLLE_LIBRARY}")

# ---- RPATH so tdep_shim can find libolle.so at runtime ----
get_filename_component(OLLE_LIB_DIR_RESOLVED "${OLLE_LIBRARY}" DIRECTORY)

# Use absolute rpath for simplicity (works on Linux/macOS)
set_target_properties(tdep_shim PROPERTIES
  BUILD_RPATH "${OLLE_LIB_DIR_RESOLVED}"
  INSTALL_RPATH "${OLLE_LIB_DIR_RESOLVED}"
  INSTALL_RPATH_USE_LINK_PATH TRUE)

# ---- Install (optional) ----
include(GNUInstallDirs)
install(TARGETS tdep_shim
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})


# cmake -S . -B build \
#   -DOLLE_INCLUDE_DIR=/path/to/olle/mods \
#   -DOLLE_LIB_DIR=/path/to/olle/lib
# cmake --build build -j